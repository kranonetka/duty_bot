import random
from itertools import zip_longest

import vk_api
from vk_api.keyboard import VkKeyboard, VkKeyboardColor

from .db import db_context, DutyRoom

if False:  # Type hinting
    from sqlalchemy.orm import Session  # noqa


class Bot:
    LEFT_ROOMS = tuple(range(601, 620))
    RIGHT_ROOMS = tuple(range(620, 639))
    ALL_ROOMS = LEFT_ROOMS + RIGHT_ROOMS

    def __init__(self, access_token: str, peer_id: int, api_version='5.103'):
        self._session = vk_api.VkApi(token=access_token, api_version=api_version)
        self._peer_id = peer_id
        self._default_keyboard = self._get_keyboard()

    def show_list(self):
        all_rooms = self._get_all_duty_rooms()

        left_rooms = filter(Bot.LEFT_ROOMS.__contains__, all_rooms)
        right_rooms = filter(Bot.RIGHT_ROOMS.__contains__, all_rooms)

        msg = self._build_rooms_list_msg(left_rooms, right_rooms)

        self._send_text(msg)

    def help(self):
        msg = '‚ùì –ö–æ–º–∞–Ω–¥—ã:\n' \
              'üî∏ –ö–æ–≥–¥–∞ <–∫–æ–º–Ω–∞—Ç–∞> -- –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–∏–º–µ—Ä–Ω—É—é –¥–∞—Ç—É, –∫–æ–≥–¥–∞ –¥–µ–∂—É—Ä–∏—Ç –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–∞—è –∫–æ–º–Ω–∞—Ç–∞\n' \
              'üî∏ <–∫–æ–º–Ω–∞—Ç–∞> -- —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å, —á—Ç–æ –∫–æ–º–Ω–∞—Ç–∞ –¥–µ–∂—É—Ä–∏—Ç —Å–µ–≥–æ–¥–Ω—è\n' \
              '\n' \
              'üî∏ +<–∫–æ–º–Ω–∞—Ç—ã> -- –¥–æ–±–∞–≤–∏—Ç—å –∫–æ–º–Ω–∞—Ç—ã –≤ —Å–ø–∏—Å–æ–∫ –¥–µ–∂—É—Ä—è—â–∏—Ö\n' \
              'üî∏ -<–∫–æ–º–Ω–∞—Ç—ã> -- —É–±—Ä–∞—Ç—å –∫–æ–º–Ω–∞—Ç—ã –∏–∑ —Å–ø–∏—Å–∫–∞ –¥–µ–∂—É—Ä—è—â–∏—Ö\n' \
              '–ö–æ–º–Ω–∞—Ç—ã –º–æ–≥—É—Ç –±—ã—Ç—å –∑–∞–¥–∞–Ω—ã –∫–∞–∫ –ø–æ –æ–¥–∏–Ω–æ—á–∫–µ, —Ç–∞–∫ –∏ –¥–∏–∞–ø–∞–∑–æ–Ω–æ–º. –ù–∞–ø—Ä–∏–º–µ—Ä:\n' \
              '+601 603-606  -  –¥–æ–±–∞–≤–∏—Ç –∫–æ–º–Ω–∞—Ç—ã: 601, 603, 604, 605, 606\n' \
              '\n' \
              'üî∏ –ü–æ–º–æ—â—å -- –≤—ã–≤–æ–¥ —ç—Ç–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è\n' \
              '\n' \
              'üî∏ –ö–Ω–æ–ø–∫–∞ "–ö—Ç–æ –¥–µ–∂—É—Ä–∏—Ç —Å–µ–≥–æ–¥–Ω—è" -- –≤—ã–≤–æ–¥ –¥–µ–∂—É—Ä—è—â–∏—Ö —Å–µ–≥–æ–¥–Ω—è –∫–æ–º–Ω–∞—Ç'

        self._send_text(msg)

    def _build_rooms_list_msg(self, left_rooms, right_rooms):
        msg = 'üìã –î–µ–∂—É—Ä—è—â–∏–µ –∫–æ–º–Ω–∞—Ç—ã:\n'
        msg += '\n'.join(
            f'|{left:^5}|{right:^5}|'
            for left, right in zip_longest(left_rooms, right_rooms, fillvalue="___")
        )

        return msg

    def _get_all_duty_rooms(self):
        with db_context.session() as session:  # type: Session
            rooms = session.query(DutyRoom).order_by(DutyRoom.room).all()
            return [room.room for room in rooms]

    def _get_keyboard(self):
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button(
            label='–ö—Ç–æ –¥–µ–∂—É—Ä–∏—Ç —Å–µ–≥–æ–¥–Ω—è',
            color=VkKeyboardColor.POSITIVE,
            payload={
                'command': 'main'
            }
        )
        return keyboard.get_keyboard()

    def _send_text(self, message: str, **kwargs) -> None:
        kwargs.update(
            random_id=random.getrandbits(64),
            keyboard=self._default_keyboard,
            message=message,
            peer_id=self._peer_id
        )
        self._session.method('messages.send', kwargs)
